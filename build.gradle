buildscript {
    ext {
        springBootVersion = '2.3.7.RELEASE'
        querydslPluginVersion = '1.0.10'
        elasticsearchVersion = '7.10.0'
    }
    repositories {
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" } // 플러그인 저장소
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("gradle.plugin.com.ewerk.gradle.plugins:querydsl-plugin:${querydslPluginVersion}")
    }
}

subprojects {
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'java'
    apply plugin: 'idea'

    group = 'kr.or.connect.webapp'
    version = '0.0.1-SNAPSHOT'
    sourceCompatibility = '11'
    targetCompatibility = '11'

    repositories {
        mavenCentral()
    }

    // 서브 모듈에 공통으로 의존성을 추가 시킬 디펜던시를 정의합니다.
    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-tomcat'
        implementation 'org.springframework.boot:spring-boot-starter-cache'
        implementation 'org.springframework.boot:spring-boot-starter-aop'

        // cache
        implementation 'com.github.ben-manes.caffeine:caffeine:2.8.2'

        implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.5.7'
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'ch.qos.logback:logback-classic:1.2.3'

        implementation 'org.slf4j:slf4j-api:1.7.25'
        implementation 'org.slf4j:log4j-over-slf4j:1.7.25'
        implementation 'org.slf4j:jcl-over-slf4j:1.7.25'
        implementation 'org.slf4j:jul-to-slf4j:1.7.25'

        implementation 'com.fasterxml.jackson.core:jackson-core:2.10.1'
        implementation 'com.fasterxml.jackson.core:jackson-databind:2.10.1'
        implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.10.1'

        /* kafka */
        implementation 'org.springframework.kafka:spring-kafka'

        // elasticsearch
        implementation("org.elasticsearch.client:elasticsearch-rest-high-level-client:${elasticsearchVersion}")
        implementation "org.elasticsearch.client:elasticsearch-rest-client:${elasticsearchVersion}"
        implementation "org.elasticsearch:elasticsearch:${elasticsearchVersion}"

        // https://mvnrepository.com/artifact/net.logstash.logback/logstash-logback-encoder
        implementation group: 'net.logstash.logback', name: 'logstash-logback-encoder', version: '4.11'

        // connection pool
        compile group: 'com.zaxxer', name: 'HikariCP', version: '2.3.2'
        implementation 'mysql:mysql-connector-java'

        compile('javax.servlet:jstl:1.2')
        compile('org.apache.tomcat.embed:tomcat-embed-jasper')

        compileOnly 'javax.servlet:javax.servlet-api:3.1.0'
        compileOnly 'javax.servlet.jsp:javax.servlet.jsp-api:2.3.1'

        implementation 'com.google.code.findbugs:jsr305:3.0.2'

        implementation("org.springframework.boot:spring-boot-starter-data-redis")

        implementation 'org.springframework.boot:spring-boot-devtools'

        annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
        annotationProcessor 'org.projectlombok:lombok'

        //junit test
        testImplementation('org.junit.jupiter:junit-jupiter-api:5.2.0')
        testCompile('org.junit.jupiter:junit-jupiter-params:5.2.0')
        testRuntime('org.junit.jupiter:junit-jupiter-engine:5.2.0')
        testImplementation('org.springframework.boot:spring-boot-starter-test') {
            exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        }

        implementation "javax.xml.bind:jaxb-api:2.3.0"
        implementation "com.sun.xml.bind:jaxb-core:2.3.0"
        implementation "com.sun.xml.bind:jaxb-impl:2.3.0"
        implementation "javax.activation:activation:1.1.1"
    }
}

project(':module-reservation') {
    apply plugin: 'war'
    springBoot {
        mainClassName = 'kr.or.connect.reservation.Application'
    }

    dependencies {
        compileOnly "org.projectlombok:lombok"
        annotationProcessor "org.projectlombok:lombok"

        //query queryDsl
        implementation 'com.querydsl:querydsl-jpa'
        implementation 'com.querydsl:querydsl-apt'

        testImplementation('org.junit.jupiter:junit-jupiter-api:5.2.0')
        testCompile('org.junit.jupiter:junit-jupiter-params:5.2.0')
        testRuntime('org.junit.jupiter:junit-jupiter-engine:5.2.0')
        testImplementation('org.springframework.boot:spring-boot-starter-test') {
            exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        }
    }

    test {
        useJUnitPlatform()
    }

    def querydslSrcDir = 'src/main/generated' // QClass 생성 위치
    apply plugin: "com.ewerk.gradle.plugins.querydsl" // Plugin 적용

    querydsl {
        library = "com.querydsl:querydsl-apt"
        jpa = true
        querydslSourcesDir = querydslSrcDir
    }

    sourceSets {
        main {
            java {
                srcDirs = ['src/main/java', querydslSrcDir]
            }
        }
    }

    compileQuerydsl {
        options.annotationProcessorPath = configurations.querydsl
    }
    configurations {
        querydsl.extendsFrom compileClasspath
    }
}

project(':module-alarm') {
    dependencies {
        compileOnly "org.projectlombok:lombok"
        annotationProcessor "org.projectlombok:lombok"

        testImplementation('org.junit.jupiter:junit-jupiter-api:5.2.0')
        testCompile('org.junit.jupiter:junit-jupiter-params:5.2.0')
        testRuntime('org.junit.jupiter:junit-jupiter-engine:5.2.0')
        testImplementation('org.springframework.boot:spring-boot-starter-test') {
            exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        }
    }

    test {
        useJUnitPlatform()
    }

}

project(':module-reflectPromotion') {
    dependencies {
        compileOnly "org.projectlombok:lombok"
        annotationProcessor "org.projectlombok:lombok"
    }
}